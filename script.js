//  –ü–ª–∞–≤–Ω–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è –ø—Ä–∏ –ø–æ—è–≤—ñ —Å–µ–∫—Ü—ñ–π

const sections = document.querySelectorAll("section");

const reveal = () => {
    const triggerBottom = window.innerHeight * 0.85;

    sections.forEach(section => {
        const top = section.getBoundingClientRect().top;
        if (top < triggerBottom) {
            section.classList.add("visible");
        }
    });
};

window.addEventListener("scroll", reveal);
window.addEventListener("load", reveal);


// üåô –¢–µ–º–Ω–∞ —Ç–µ–º–∞

const toggle = document.getElementById("darkModeToggle");
const body = document.body;

// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–µ–º—É –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
if (localStorage.getItem("theme") === "dark") {
    body.classList.add("dark-mode");
    if (toggle) toggle.checked = true;
}

// –°–ª—É—Ö–∞—á –Ω–∞ –ø–µ—Ä–µ–º–∏–∫–∞—á
if (toggle) {
    toggle.addEventListener("change", () => {
        body.classList.toggle("dark-mode");
        const theme = body.classList.contains("dark-mode") ? "dark" : "light";
        localStorage.setItem("theme", theme);
    });
}

// –ê–∫—Ü—ñ—è 

function startCountdown() {
    const countdown = document.getElementById("countdown");

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —ñ—Å–Ω—É—î –µ–ª–µ–º–µ–Ω—Ç countdown
    if (!countdown) {
        console.error("–ï–ª–µ–º–µ–Ω—Ç countdown –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π!");
        return;
    }

    const deadline = new Date(2025, 7, 31, 23, 59, 59); // –î–∞—Ç–∞: 31 —Å–µ—Ä–ø–Ω—è 2025 —Ä–æ–∫—É

    function updateCountdown() {
        const now = new Date();
        const diff = deadline - now;

        if (diff <= 0) {
            countdown.innerHTML = "–ß–∞—Å –≤–∏–π—à–æ–≤!";
            return;
        }

        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
        const minutes = Math.floor((diff / (1000 * 60)) % 60);
        const seconds = Math.floor((diff / 1000) % 60);

        countdown.innerHTML = `–î–æ –∫—ñ–Ω—Ü—è –∞–∫—Ü—ñ—ó: ${days}–¥ ${hours}–≥ ${minutes}—Ö–≤ ${seconds}—Å–µ–∫`;
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–ª—ñ–∫ –∫–æ–∂–Ω—É —Å–µ–∫—É–Ω–¥—É
    setInterval(updateCountdown, 1000);
}

// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener("DOMContentLoaded", startCountdown);

// –ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ

// –ó–∞–∫—Ä–∏—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
setTimeout(function () {
    document.getElementById('welcome-modal').style.display = 'none';
}, 5000); // 5000 –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥ = 5 —Å–µ–∫—É–Ω–¥

// –ó–∞–∫—Ä–∏—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ —Ö—Ä–µ—Å—Ç–∏–∫
document.getElementById('close-btn').addEventListener('click', function () {
    document.getElementById('welcome-modal').style.display = 'none';
});


// –í—ñ–∫–Ω–æ –¥–æ–ø–æ–º–æ–≥–∏

window.addEventListener('load', function () {
    setTimeout(function () {
        document.getElementById('popup').style.display = 'block';
    }, 8000); // –í—ñ–∫–Ω–æ –∑'—è–≤–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥

    document.getElementById('close-popup').addEventListener('click', function () {
        document.getElementById('popup').style.display = 'none';
    });
});


// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á–∞ –¥–ª—è —Ñ–æ—Ç–æ(–≤—ñ–¥–≥—É–∫–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤)
const photos = document.querySelectorAll('.testimonial-photo');

const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('visible'); // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å "visible" –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
            observer.unobserve(entry.target); // –ü—Ä–∏–±–∏—Ä–∞—î–º–æ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –µ–ª–µ–º–µ–Ω—Ç —Å—Ç–∞–≤ –≤–∏–¥–∏–º–∏–º
        }
    });
}, {
    threshold: 0.5 // –§–æ—Ç–æ –º–∞—î –±—É—Ç–∏ –Ω–∞ 50% –≤–∏–¥–∏–º–∏–º –¥–ª—è –∑–∞–ø—É—Å–∫—É –∞–Ω—ñ–º–∞—Ü—ñ—ó
});

// –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞ –∫–æ–∂–Ω–∏–º —Ñ–æ—Ç–æ
photos.forEach(photo => {
    observer.observe(photo);
});

// –í—ñ–¥–≥—É–∫–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤

const testimonialsData = {
    testimonial1: [
        {
            img: "foto/elena.jpg",
            alt: "–û–ª–µ–Ω–∞",
            text: "–í—Å—å–æ–≥–æ –∑–∞ —Ç—Ä–∏ –¥–Ω—ñ –æ—Ç—Ä–∏–º–∞–ª–∞ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–µ –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ. –°—Ç–∏–ª—å–Ω–∏–π –¥–∏–∑–∞–π–Ω, –∞–¥–∞–ø—Ç–∏–≤–Ω—ñ—Å—Ç—å ‚Äî —É—Å–µ –Ω–∞ —Ä—ñ–≤–Ω—ñ!",
            cite: "‚Äî –û–ª–µ–Ω–∞, –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥"
        },
        {
            img: "foto/nadija.png",
            alt: "–ù–∞–¥—ñ—è",
            text: "–†–æ–±–æ—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–∞ —è–∫—ñ—Å–Ω–æ —Ç–∞ —à–≤–∏–¥–∫–æ. –î–∏–∑–∞–π–Ω –º–µ–Ω—ñ –¥—É–∂–µ –ø—ñ–¥—ñ–π—à–æ–≤. –†–µ–∫–æ–º–µ–Ω–¥—É—é —É—Å—ñ–º —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä–∞–º!",
            cite: "‚Äî –ù–∞–¥—ñ—è, —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä"
        },
        {
            img: "foto/volodumer.jpg",
            alt: "–í–æ–ª–æ–¥–∏–º–∏—Ä",
            text: "–ú—ñ–π –ª–µ–Ω–¥—ñ–Ω–≥ –≤–∏–≥–ª—è–¥–∞—î –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ —ñ –ø—Ä–∏–≤–∞–±–ª–∏–≤–æ ‚Äî —á—É–¥–æ–≤–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –±—É–¥—ñ–≤–µ–ª—å–Ω–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É!",
            cite: "‚Äî –í–æ–ª–æ–¥–∏–º–∏—Ä, –≤–ª–∞—Å–Ω–∏–∫ –±—É–¥—ñ–≤–µ–ª—å–Ω–æ—ó —Ñ—ñ—Ä–º–∏"
        }
    ],
    testimonial2: [
        {
            img: "foto/andrew.jpg",
            alt: "–ê–Ω–¥—Ä—ñ–π",
            text: "–û—Ç—Ä–∏–º–∞–≤ —Å—É—á–∞—Å–Ω–∏–π —Å–∞–π—Ç –¥–ª—è –º–∞–≥–∞–∑–∏–Ω—É –∑–∞ —Ä–µ–∫–æ—Ä–¥–Ω—ñ —Å—Ç—Ä–æ–∫–∏. –†–æ–±–æ—Ç–∞ –ø–µ—Ä–µ–≤–µ—Ä—à–∏–ª–∞ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è!",
            cite: "‚Äî –ê–Ω–¥—Ä—ñ–π, –≤–ª–∞—Å–Ω–∏–∫ –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω—É"
        },
        {
            img: "foto/vika.jpg",
            alt: "–í—ñ–∫–∞",
            text: "–õ–µ–Ω–¥—ñ–Ω–≥ –∑—Ä–æ–±–∏–ª–∏ –∑–∞ –¥–≤–∞ –¥–Ω—ñ! –°—Ç–∏–ª—å–Ω–æ, –∑—Ä–æ–∑—É–º—ñ–ª–æ, —ñ –∫–ª—ñ—î–Ω—Ç–∞–º –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è. –Ø –∑–∞–¥–æ–≤–æ–ª–µ–Ω–∞!",
            cite: "‚Äî –í—ñ–∫–∞, –≤–ª–∞—Å–Ω–∏—Ü—è –ø–µ—Ä—É–∫–∞—Ä–Ω—ñ"
        },
        {
            img: "foto/sergey.jpg",
            alt: "–°–µ—Ä–≥—ñ–π",
            text: "–ü—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É —Å–∞–π—Ç—É –∑–∞—è–≤–∫–∏ –ø–æ—á–∞–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç–∏ –≤—ñ–¥—Ä–∞–∑—É. –î—É–∂–µ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ!",
            cite: "‚Äî –°–µ—Ä–≥—ñ–π, —Ñ–µ—Ä–º–µ—Ä"
        }
    ],
    testimonial3: [
        {
            img: "foto/mary.jpg",
            alt: "–ú–∞—Ä—ñ—è",
            text: "–ü—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —Ä–µ–∑—é–º–µ –º–µ–Ω–µ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –æ–¥—Ä–∞–∑—É –Ω–∞ –∫—ñ–ª—å–∫–∞ —Å–ø—ñ–≤–±–µ—Å—ñ–¥. –î—É–∂–µ –≤–¥—è—á–Ω–∞!",
            cite: "‚Äî –ú–∞—Ä—ñ—è, —à—É–∫–∞—á–∫–∞ —Ä–æ–±–æ—Ç–∏"
        },
        {
            img: "foto/bogdan.jpg",
            alt: "–ë–æ–≥–¥–∞–Ω",
            text: "–†–µ–∑—é–º–µ –≤–∏–∫–æ–Ω–∞–Ω–µ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ. –ü–æ–¥–∞—á–∞, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Äî –≤—Å–µ –Ω–∞ –≤–∏—Å–æ–∫–æ–º—É —Ä—ñ–≤–Ω—ñ. –û—Ç—Ä–∏–º–∞–≤ –Ω–æ–≤—É –ø–æ—Å–∞–¥—É!",
            cite: "‚Äî –ë–æ–≥–¥–∞–Ω, —Ä–µ–∫—Ä—É—Ç–µ—Ä"
        },
        {
            img: "foto/sofia.jpg",
            alt: "–°–æ—Ñ—ñ—è",
            text: "–°–∞–π—Ç –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ –∑—Ä–æ–±–ª–µ–Ω–∏–π –∑ –∫—Ä–µ–∞—Ç–∏–≤–æ–º —ñ —Å–º–∞–∫–æ–º. –ó–∞–º–æ–≤–ª—è—Ç–∏–º—É —â–µ –±–∞–Ω–µ—Ä–∏ –π —Å—Ç–æ—Ä—ñ–Ω–∫–∏!",
            cite: "‚Äî –°–æ—Ñ—ñ—è, –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥"
        }
    ]
};

function rotateTestimonials(id) {
    const container = document.getElementById(id);
    const data = testimonialsData[id];
    let index = 0;
    setInterval(() => {
        index = (index + 1) % data.length;
        const t = data[index];
        container.querySelector('img').src = t.img;
        container.querySelector('img').alt = t.alt;
        container.querySelector('.testimonial-content p').textContent = t.text;
        container.querySelector('.testimonial-content cite').textContent = t.cite;
    }, 20000); // –∑–º—ñ–Ω—é—î–º–æ –∫–æ–∂–Ω—ñ 20 —Å–µ–∫—É–Ω–¥
}

rotateTestimonials('testimonial1');
rotateTestimonials('testimonial2');
rotateTestimonials('testimonial3');

// –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ—é

function share(network) {
    const url = encodeURIComponent('https://scintillating-sunshine-94e986.netlify.app/');
    const text = encodeURIComponent('WebStart Studio!');

    let shareUrl = '';

    switch (network) {
        case 'facebook':
            shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${url}`;
            break;
        case 'telegram':
            shareUrl = `https://t.me/share/url?url=${url}&text=${text}`;
            break;
        case 'viber':
            // Viber –Ω–µ –º–∞—î –ø—Ä—è–º–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è —à–µ—Ä–∏–Ω–≥—É, –º–æ–∂–Ω–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è URL –∞–±–æ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —á–∞—Ç
            alert('–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—å —É Viber, —Å–∫–æ–ø—ñ—é–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: ' + decodeURIComponent(url));
            return;
        case 'linkedin':
            shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${url}`;
            break;
        case 'messenger':
            shareUrl = `fb-messenger://share/?link=${url}`;
            break;
        default:
            alert('–°–æ—Ü–º–µ—Ä–µ–∂–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è');
            return;
    }

    window.open(shareUrl, '_blank', 'width=600,height=400');
}

// –í–∞—Ä—Ç—ñ—Å—Ç—å

const toggleBtn = document.getElementById('togglePricing');
const pricingTable = document.getElementById('pricingTable');
const linkWrapper = document.getElementById('linkWrapper');

toggleBtn.addEventListener('click', () => {
    const isVisible = pricingTable.style.display === 'table';
    if (isVisible) {
        pricingTable.style.display = 'none';
        linkWrapper.style.display = 'none';
        toggleBtn.setAttribute('aria-expanded', 'false');
        toggleBtn.textContent = '—Ç—É—Ç';
    } else {
        pricingTable.style.display = 'table';
        linkWrapper.style.display = 'block';
        toggleBtn.setAttribute('aria-expanded', 'true');
        toggleBtn.textContent = '–ø—Ä–∏—Ö–æ–≤–∞—Ç–∏';
    }
});



// –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤

// const counterElement = document.getElementById('view-counter');

// // –ö–ª—é—á —Å–∞–π—Ç—É (–º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º)
// const namespace = 'webstart-studio';
// const key = 'visits';

// // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ + –æ—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
// fetch(`https://api.countapi.xyz/hit/${namespace}/${key}`)
//     .then(res => res.json())
//     .then(data => {
//         animateCount(data.value);
//     });

// function animateCount(targetValue) {
//     const duration = 2000;
//     const stepTime = 15;
//     let current = 0;
//     const increment = Math.ceil(targetValue / (duration / stepTime));

//     const interval = setInterval(() => {
//         current += increment;
//         if (current >= targetValue) {
//             current = targetValue;
//             clearInterval(interval);
//         }
//         counterElement.textContent = current;
//     }, stepTime);
// }

// fetch(`https://api.countapi.xyz/hit/${namespace}/${key}`)
//     .then(res => res.json())
//     .then(data => console.log(data));
